{"version":3,"sources":["components/navigation/Navigation.module.css","components/confirmPassword/ConfirmPassword.module.css","components/customButton/CustomButton.module.css","style/Common.module.css","components/customCheckBox/CustomCheckbox.module.css","App.module.css","components/loginPage/Login.module.css","components/preloader/Preloader.module.css","components/registrations/Registrations.module.css","store/reducers/cards.ts","api/apiConfig/index.ts","api/loginApi.ts","store/reducers/login.ts","store/reducers/profile.ts","components/loginPage/Login.tsx","api/forgotPasswordApi.ts","assets/loader.gif","components/preloader/Preloader.tsx","components/confirmPassword/ConfirmPassword.tsx","store/middlewares/forgotPassAddEmailTC.ts","assets/error.png","components/confirmPassword/PopupError.tsx","components/confirmPassword/CreateNewPassword.tsx","store/middlewares/forgotPassSetPassTC.ts","assets/letter.png","components/confirmPassword/Popup.tsx","components/navigation/Navigation.tsx","components/profile/Profile.tsx","components/registrations/Registrations.tsx","components/Test.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["module","exports","initState","instance","axios","create","baseURL","process","withCredentials","authAPI","params","post","delete","initialState","isAuth","error","setAuthLoginDataAC","type","setErrorMessageAC","_id","avatar","name","email","rememberMe","Login","useState","setEmail","password","setPassword","setRememberMe","dispatch","useDispatch","isDataLoaded","useSelector","state","login","errorMessage","to","className","style","mainContainer","content","contentWrap","color","onChange","e","currentTarget","value","placeholder","inputEmail","st","rememberMeInput","checked","onClick","data","then","catch","response","message","btn","addNewPassAPI","Preloader","loader","src","alt","ConfirmPassword","loading","setLoading","isShown","setShowMessage","dataPayload","from","inputCentering","required","forgotPassAddEmailTC","PopupError","setError","errorImg","errorSign","CreateNewPassword","newPassword","isLoadedData","setLoadedData","isError","location","useLocation","resetPasswordToken","pathname","split","length","console","log","inputPassword","forgotPassSetPassTC","Popup","letterImg","letter","Navigation","nav","menu","navElement","Profile","isAuthUser","Registrations","confirmPassword","setConfirmPassword","btns","Test","container","App","s","app","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","cards","action","profilePage","payload","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e13cd9f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3CXyF\",\"navElement\":\"Navigation_navElement__3VPMA\",\"menu\":\"Navigation_menu__VUGMY\",\"p\":\"Navigation_p__3EbMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letterImg\":\"ConfirmPassword_letterImg__3UhNI\",\"errorImg\":\"ConfirmPassword_errorImg__1CPVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"CustomButton_default__3mziG\",\"red\":\"CustomButton_red__LqAzu\",\"button\":\"CustomButton_button__1kKFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Common_mainContainer__1YbqG\",\"contentWrap\":\"Common_contentWrap__3cz03\",\"content\":\"Common_content__2nJCL\",\"btn\":\"Common_btn__3a_wE\",\"inputEmail\":\"Common_inputEmail__3iLZ5\",\"inputPassword\":\"Common_inputPassword__yLVis\",\"inputCentering\":\"Common_inputCentering__1z1RO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"CustomCheckbox_checkbox__34nPX\",\"spanClassName\":\"CustomCheckbox_spanClassName__1DG_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rememberMeInput\":\"Login_rememberMeInput__2wEHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__3R_QX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"Registrations_btns__17Wql\"};","const initState = {};\n\ntype initStateType = {};\n\nexport const cardReducer = (\n  state: initStateType = initState,\n  action: any,\n): initStateType => {\n  switch (action.type) {\n    case '': {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_BASE_URL; // Достаем базовый юрл из .env(ссылка на хироку)\n\nexport const instance = axios.create({\n  baseURL: baseUrl,\n  withCredentials: true,\n});\n","import { AxiosResponse } from 'axios';\n\nimport { instance } from './apiConfig';\n\nexport const authAPI = {\n  login(params: LoginParamsType) {\n    return instance.post<\n      LoginParamsType,\n      /* 'сам объект сервера который отправляет игнат' */\n      /* AxiosResponse нужен только у методов put и post */\n      AxiosResponse<ResponseType>\n    >('auth/login', params);\n  },\n  logOut() {\n    return instance.delete<ResponseType>('auth/me', {});\n  },\n  me() {\n    return instance.post<any>('auth/me');\n  },\n  register(params: RegisterParamsType) {\n    return instance.post<RegisterParamsType, any>('auth/register', params);\n  },\n};\n\n// types\n\nexport type LoginParamsType = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n};\nexport type RegisterParamsType = {\n  email: string;\n  password: string;\n};\n\nexport type ResponseType = {\n  _id: string;\n  email: string;\n  name: string;\n  avatar?: string;\n  token: string;\n  publicCardPacksCount: number;\n  created: Date;\n  updated: Date;\n  verified: boolean;\n  rememberMe: boolean;\n};\n","import { ThunkDispatch } from 'redux-thunk';\n\nimport { authAPI, LoginParamsType } from '../../api/loginApi';\nimport { Nullable } from '../../types';\nimport { RootStoreType } from '../store';\n\nexport type InitialStateDataType = {\n  isAuth: boolean;\n  error?: Nullable<string>;\n};\n\nconst initialState: InitialStateDataType = {\n  isAuth: false,\n  error: null,\n};\n\nexport const loginReducer = (\n  state: InitialStateDataType = initialState,\n  action: ActionTypes,\n): InitialStateDataType => {\n  switch (action.type) {\n    case 'LOGIN/SET_AUTH_LOGIN_DATA':\n      return {\n        ...state,\n        isAuth: action.isAuth,\n      };\n    case 'LOGIN/SET_ERROR_MESSAGE':\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setAuthLoginDataAC = (isAuth: boolean) =>\n  ({ type: 'LOGIN/SET_AUTH_LOGIN_DATA', isAuth } as const);\n\nexport const setErrorMessageAC = (error: Nullable<string>) =>\n  ({ type: 'LOGIN/SET_ERROR_MESSAGE', error } as const);\n\nexport const logInTC =\n  (data: LoginParamsType) =>\n  (dispatch: ThunkDispatch<RootStoreType, undefined, ActionTypes>) => {\n    authAPI\n      .login(data)\n      .then(() => {\n        dispatch(setAuthLoginDataAC(true));\n      })\n      .catch(e => {\n        const error = e.response\n          ? e.response.data.error\n          : `${e.message}, more details in the console`;\n        dispatch(setErrorMessageAC(error));\n      });\n  };\n\nexport const logOutTC =\n  () => (dispatch: ThunkDispatch<RootStoreType, undefined, ActionTypes>) => {\n    authAPI.logOut().then(() => {\n      dispatch(setAuthLoginDataAC(false));\n      dispatch(setErrorMessageAC(''));\n    });\n  };\n\n// type;\ntype setLoginData = ReturnType<typeof setAuthLoginDataAC>;\ntype setErrorMessageLogin = ReturnType<typeof setErrorMessageAC>;\ntype ActionTypes = setLoginData | setErrorMessageLogin;\n","import { Nullable } from '../../types';\n\nexport type InitialStateDataType = {\n  _id: Nullable<string>;\n  avatar?: Nullable<string>;\n  name: Nullable<string>;\n  email: Nullable<string>;\n  rememberMe: boolean;\n};\n\nconst initialState: InitialStateDataType = {\n  _id: null,\n  avatar: null,\n  name: null,\n  email: null,\n  rememberMe: false,\n};\n\nexport const profileReducer = (\n  state: InitialStateDataType = initialState,\n  action: ActionTypes,\n): InitialStateDataType => {\n  switch (action.type) {\n    case 'SET_USER_DATA':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    // case 'SET_ERROR_MESSAGE':\n    //   return {\n    //     ...state,\n    //     error: action.error,\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (_id: Nullable<string>, name: Nullable<string>) =>\n  ({\n    type: 'SET_USER_DATA',\n    payload: { _id, name },\n  } as const);\n\nexport const setErrorMessage = (error: Nullable<string>) =>\n  ({ type: 'SET_ERROR_MESSAGE', error } as const);\n\n// export const getAuthLoginData = () => (dispatch: ThunkDispatch<AppStateType, undefined, ActionTypes>) => {\n//   return authAPI.me()\n//     .then(response => {\n//       if (response.data.resultCode === 0) {                     //проверка залогинен пользователь или нет\n//         let {id, login, email} = response.data.data\n//         dispatch(setAuthUserData(id, login, email, true));\n//\n//       }\n//     });\n// }\n\n// export const logIn =\n//   (data: LoginParamsType) =>\n//     (dispatch: ThunkDispatch<RootStoreType, undefined, ActionTypes>) => {\n//       authAPI\n//         .login(data)\n//         .then(response => {\n//           const { email, rememberMe } = response.data;\n//           dispatch(setAuthLoginData(email, rememberMe, true));\n//         })\n//         .catch(e => {\n//           const error = e.response\n//             ? e.response.data.error\n//             : `${e.message}, more details in the console`;\n//           dispatch(setErrorMessage(error));\n//         });\n//     };\n//\n// export const getUserData = () => (dispatch: ThunkDispatch<RootStoreType, undefined, ActionTypes>) => {\n//   (dispatch: ThunkDispatch<RootStoreType, undefined, ActionTypes>) => {\n//     authAPI.logOut().then(() => {\n//       const { _id, name, verified } = response.data;\n//       dispatch(setUserData(_id, name, verified));\n//     }\n//     });\n// }\n\n// type;\ntype setAuthUserData = ReturnType<typeof setUserData>;\ntype setErrorMessageLogin = ReturnType<typeof setErrorMessage>;\ntype ActionTypes = setAuthUserData | setErrorMessageLogin;\n","import React, { ChangeEvent, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\n\nimport { RootStoreType, logInTC } from '../../store';\nimport style from '../../style/Common.module.css';\nimport { ReturnComponentType } from '../../types';\n\nimport st from './Login.module.css';\n\nexport const Login = (): ReturnComponentType => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [rememberMe, setRememberMe] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  const isDataLoaded = useSelector<RootStoreType, boolean>(state => state.login.isAuth);\n  const errorMessage = useSelector<RootStoreType>(state => state.login.error);\n\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>): void =>\n    setEmail(e.currentTarget.value);\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>): void =>\n    setPassword(e.currentTarget.value);\n  const onChangeCheckBox = (e: ChangeEvent<HTMLInputElement>): void =>\n    setRememberMe(e.currentTarget.checked);\n\n  const onClickHandlerLogin = (): void => {\n    dispatch(logInTC({ email, password, rememberMe }));\n  };\n\n  if (isDataLoaded) {\n    return <Navigate to=\"/profile\" />;\n  }\n\n  return (\n    <div className={style.mainContainer}>\n      <div className={style.content}>\n        <div className={style.contentWrap}>\n          <h2> Login </h2>\n          {errorMessage ? <span style={{ color: 'red' }}> {errorMessage} </span> : ''}\n          <input\n            type=\"text\"\n            onChange={onChangeEmail}\n            value={email}\n            placeholder=\"Email\"\n            className={style.inputEmail}\n          />\n          <input\n            type=\"password\"\n            onChange={onChangePassword}\n            value={password}\n            placeholder=\"Password\"\n            className={style.inputEmail}\n          />\n          <div className={st.rememberMeInput}>\n            remember me\n            <input type=\"checkbox\" checked={rememberMe} onChange={onChangeCheckBox} />\n          </div>\n          <div>\n            <Link to=\"/confirmPassword\"> Forgot password </Link>\n          </div>\n          <button onClick={onClickHandlerLogin} className={style.btn}>\n            Sign In\n          </button>\n          <p> Do not have an account? </p>\n          <Link to=\"/registration\"> Sign Up </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { AxiosResponse } from 'axios';\n\nimport { Nullable } from '../types';\n\nimport { instance } from './apiConfig';\n\nexport type AddNewPassType = {\n  email: Nullable<string>;\n  from: Nullable<string>;\n  message: Nullable<string>;\n};\n\nexport type SetNewPassType = {\n  password: Nullable<string>;\n  resetPasswordToken: Nullable<string>;\n};\n\nexport type AddNewPassResponseType = {\n  info: Nullable<string>;\n  error: Nullable<string>;\n};\n\nexport const addNewPassAPI = {\n  addNewPass(params: AddNewPassType) {\n    return instance.post<AddNewPassType, AxiosResponse<AddNewPassResponseType>>(\n      'auth/forgot',\n      params,\n    );\n  },\n  setNewPass(params: SetNewPassType) {\n    return instance.post<SetNewPassType, AxiosResponse<AddNewPassResponseType>>(\n      'auth/set-new-password',\n      params,\n    );\n  },\n};\n","export default __webpack_public_path__ + \"static/media/loader.a6760d82.gif\";","import React from 'react';\n\nimport { ReturnComponentType } from '../../types';\n\nimport style from './Preloader.module.css';\n\nimport loader from 'assets/loader.gif';\n\nexport const Preloader = (): ReturnComponentType => (\n  <div>\n    <img className={style.loader} src={loader} alt=\"preloader\" />\n  </div>\n);\n","import React, { ChangeEvent, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\n\nimport { AddNewPassType } from '../../api/forgotPasswordApi';\nimport { forgotPassAddEmailTC } from '../../store/middlewares/forgotPassAddEmailTC';\nimport style from '../../style/Common.module.css';\nimport { Preloader } from '../preloader/Preloader';\n\nimport { ReturnComponentType } from 'types';\n\nexport const ConfirmPassword = (): ReturnComponentType => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isShown, setShowMessage] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const dataPayload: AddNewPassType = {\n    email,\n    from: 'test-front-admin <samutic40@gmail.com>',\n    message: `<div style='background-color: #ffd500; \npadding: 15px; \nborder-color: #ff9900; \nwidth: 250px;\nheight: 30px'> \npassword recovery link: <a href='http://localhost:3000/#/createNewPassword/$token$'> recovery link </a></div>`,\n  };\n\n  const onSendButtonClick = (): void => {\n    setEmail('');\n    setLoading(true);\n    dispatch(forgotPassAddEmailTC(dataPayload, setLoading, setShowMessage));\n  };\n  const onEmailInputEnter = (e: ChangeEvent<HTMLInputElement>): void => {\n    setEmail(e.currentTarget.value);\n  };\n\n  if (isShown) {\n    return <Navigate to=\"/popup\" />;\n  }\n\n  return (\n    <div className={style.mainContainer}>\n      {loading ? (\n        <Preloader />\n      ) : (\n        <div className={style.content}>\n          <div className={style.contentWrap}>\n            <h2>Forgot your password?</h2>\n            {/* <CustomInput title=\"Email\" /> */}\n            <div className={style.inputCentering}>\n              <input\n                className={style.inputEmail}\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={onEmailInputEnter}\n                required\n              />\n            </div>\n            <p> Enter your email and we will send you further instructions</p>\n            <div>\n              <button className={style.btn} onClick={onSendButtonClick}>\n                send instructions\n              </button>\n            </div>\n            <span>Did you remember your password?</span>\n            <Link to=\"/login\"> Try logging in </Link>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { addNewPassAPI, AddNewPassType } from '../../api/forgotPasswordApi';\n\nexport const forgotPassAddEmailTC =\n  (dataPayload: AddNewPassType, setLoading: any, setShowMessage: any) => () => {\n    addNewPassAPI\n      .addNewPass(dataPayload)\n      .then(() => {\n        setLoading(false);\n        setShowMessage(true);\n      })\n      .catch(e =>\n        e.response ? e.response.data.error : `${e.message}, more details in the console`,\n      );\n  };\n","export default __webpack_public_path__ + \"static/media/error.6b88fd10.png\";","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport errorSign from '../../assets/error.png';\nimport style from '../../style/Common.module.css';\nimport { ReturnComponentType } from '../../types';\n\nimport st from './ConfirmPassword.module.css';\n\ntype PopupErrorType = {\n  error: boolean;\n  setError: (error: boolean) => void;\n};\n\nexport const PopupError = ({ error, setError }: PopupErrorType): ReturnComponentType => {\n  const onLinkClick = (): void => setError(!error);\n  return (\n    <div>\n      <div className={style.mainContainer}>\n        <div className={style.content}>\n          <img className={st.errorImg} src={errorSign} alt=\"error\" />\n          <h2>Try again</h2>\n          <span>Something goes wrong</span>\n          <Link to=\"/confirmPassword\" onClick={onLinkClick}>\n            Create new password again\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate, useLocation } from 'react-router-dom';\n\nimport { SetNewPassType } from '../../api/forgotPasswordApi';\nimport { forgotPassSetPassTC } from '../../store/middlewares/forgotPassSetPassTC';\nimport style from '../../style/Common.module.css';\n\nimport { PopupError } from './PopupError';\n\nimport { ReturnComponentType } from 'types';\n\nexport const CreateNewPassword = (): ReturnComponentType => {\n  const [newPassword, setPassword] = useState('');\n  const [isLoadedData, setLoadedData] = useState(false);\n  const [isError, setError] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const lastElement = 1;\n  const token =\n    location.pathname.split('/')[location.pathname.split('/').length - lastElement];\n\n  const data: SetNewPassType = {\n    password: newPassword,\n    resetPasswordToken: token,\n  };\n  const onPasswordInputEnter = (e: ChangeEvent<HTMLInputElement>): void => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const onCreateButtonClick = (): void => {\n    dispatch(forgotPassSetPassTC(data, setLoadedData, setError));\n  };\n\n  if (isLoadedData) {\n    return <Navigate to=\"/login\" />;\n  }\n  console.log();\n\n  return (\n    <div className={style.mainContainer}>\n      {/* {!isLoadedData ? <Preloader /> : null} */}\n      {isError ? (\n        <PopupError error={isError} setError={setError} />\n      ) : (\n        <div className={style.content}>\n          <div className={style.contentWrap}>\n            {' '}\n            <h2>Create new password</h2>\n            <div className={style.inputCentering}>\n              <input\n                className={style.inputPassword}\n                type=\"password\"\n                placeholder=\"Password\"\n                value={newPassword}\n                onChange={onPasswordInputEnter}\n                required\n              />\n            </div>\n            <p> Create new password and we will send you further instructions to email</p>\n            <div>\n              <button className={style.btn} onClick={onCreateButtonClick}>\n                Create new password\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { addNewPassAPI, SetNewPassType } from '../../api/forgotPasswordApi';\n\nexport const forgotPassSetPassTC =\n  (data: SetNewPassType, setLoadedData: any, setError: any) => () => {\n    addNewPassAPI\n      .setNewPass(data)\n      .then(() => {\n        setLoadedData(true);\n      })\n      .catch(() => {\n        setError(true);\n        /*  e.response ? e.response.data.error : `${e.message}, more details in the console`; */\n      });\n  };\n","export default __webpack_public_path__ + \"static/media/letter.3761fe05.png\";","import React from 'react';\n\nimport letter from '../../assets/letter.png';\nimport style from '../../style/Common.module.css';\nimport { ReturnComponentType } from '../../types';\n\nimport st from './ConfirmPassword.module.css';\n\nexport const Popup = (): ReturnComponentType => (\n  <div>\n    <div className={style.mainContainer}>\n      <div className={style.content}>\n        <img className={st.letterImg} src={letter} alt=\"letter\" />\n        <h2>Check Email</h2>\n        <p>We have sent the Email with instructions to your email </p>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { ReturnComponentType } from '../../types';\n\nimport style from './Navigation.module.css';\n\nexport const Navigation = (): ReturnComponentType => (\n  <div className={style.nav}>\n    <h3 className={style.menu}>Menu</h3>\n    <ul>\n      <li>\n        <NavLink className={style.navElement} to=\"/login\">\n          login\n        </NavLink>\n      </li>\n\n      <li>\n        <NavLink className={style.navElement} to=\"/registration\">\n          registration\n        </NavLink>\n      </li>\n\n      <li>\n        <NavLink className={style.navElement} to=\"/profile\">\n          profile\n        </NavLink>\n      </li>\n\n      <li>\n        <NavLink className={style.navElement} to=\"/createNewPassword/*\">\n          create new password\n        </NavLink>\n      </li>\n\n      <li>\n        <NavLink className={style.navElement} to=\"/confirmPassword\">\n          confirm password\n        </NavLink>\n      </li>\n    </ul>\n  </div>\n);\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, NavLink } from 'react-router-dom';\n\nimport style from '../../style/Common.module.css';\nimport { ReturnComponentType } from '../../types';\n\nimport { logOutTC, RootStoreType } from 'store';\n\nexport const Profile: React.FC<ProfilePropsType> = (): ReturnComponentType => {\n  // const userName = useSelector<RootStoreType, any>(state => state.login.name);\n  const isAuthUser = useSelector<RootStoreType, boolean>(state => state.login.isAuth);\n  const dispatch = useDispatch();\n  const onClickLogOut = (): void => {\n    dispatch(logOutTC());\n  };\n  if (!isAuthUser) {\n    return <Navigate to=\"/login\" />;\n  }\n  return (\n    <div className={style.mainContainer}>\n      <div className={style.content}>\n        <h2> Profile </h2>\n        {isAuthUser ? (\n          <div>\n            <button className={style.btn} onClick={onClickLogOut}>\n              Log out\n            </button>\n          </div>\n        ) : (\n          <NavLink to=\"/login\">Login</NavLink>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport type ProfilePropsType = {};\n","import React, { useState } from 'react';\n\nimport { Navigate } from 'react-router-dom';\n\nimport { authAPI } from '../../api/loginApi';\nimport style from '../../style/Common.module.css';\n\nimport st from './Registrations.module.css';\n\nimport { ReturnComponentType } from 'types';\n\nexport const Registrations = (): ReturnComponentType => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoadedData, setLoadedData] = useState<boolean>(false);\n\n  const onEmailInputEnter = (e: any): void => {\n    setEmail(e.currentTarget.value);\n  };\n\n  const onPasswordInputEnter = (e: any): void => {\n    setPassword(e.currentTarget.value);\n  };\n  const onPasswordAgainInputEnter = (e: any): void => {\n    setConfirmPassword(e.currentTarget.value);\n  };\n\n  const data: any = {\n    email,\n    password,\n  };\n\n  const onSendButtonCLick = (): void => {\n    if (password === confirmPassword) {\n      authAPI.register(data).then(() => {\n        setLoadedData(true);\n      });\n    }\n  };\n  if (isLoadedData) {\n    return <Navigate to=\"/login\" />;\n  }\n  return (\n    <div className={style.mainContainer}>\n      <div className={style.content}>\n        <div className={style.contentWrap}>\n          <h2>Registration</h2>\n          <input\n            className={style.inputPassword}\n            type=\"Email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={onEmailInputEnter}\n            required\n          />\n          <input\n            className={style.inputPassword}\n            type=\"Password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={onPasswordInputEnter}\n            required\n          />\n          <input\n            className={style.inputPassword}\n            type=\"Password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={onPasswordAgainInputEnter}\n            required\n          />\n\n          <p> Have fun! </p>\n          <div className={st.btns}>\n            <button className={style.btn}>cancel</button>\n            <button className={style.btn} onClick={onSendButtonCLick}>\n              send\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport style from '../style/Common.module.css';\n\nimport { ReturnComponentType } from 'types';\n\nexport const Test = (): ReturnComponentType => (\n  <div className={style.mainContainer}>\n    <div className={style.container}>\n      <p style={{ color: 'white' }}> Test page </p>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { Route, Routes } from 'react-router-dom';\n\nimport s from './App.module.css';\nimport { ConfirmPassword, Login } from './components';\nimport { Navigation } from './components/navigation/Navigation';\nimport { Profile } from './components/profile/Profile';\nimport { Registrations } from './components/registrations/Registrations';\nimport { ReturnComponentType } from './types';\n\nimport { CreateNewPassword, Popup } from 'components';\nimport { Test } from 'components/Test';\n\nexport const App = (): ReturnComponentType => (\n  <div className={s.app}>\n    <Navigation />\n    {/*  <div className={s.wrap}> */}\n    <Routes>\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/registration\" element={<Registrations />} />\n      <Route path=\"/profile\" element={<Profile />} />\n      <Route path=\"/*\" element={<h1>404:page NOT found</h1>} />\n      <Route path=\"/confirmPassword\" element={<ConfirmPassword />} />\n      <Route path=\"/popup\" element={<Popup />} />\n      <Route path=\"/createNewPassword/*\" element={<CreateNewPassword />} />\n      <Route path=\"/\" element={<Test />} />\n    </Routes>\n  </div>\n  /*  </div> */\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport { cardReducer, loginReducer, profileReducer } from 'store';\n\nexport const rootReducer = combineReducers({\n  cards: cardReducer,\n  login: loginReducer,\n  profilePage: profileReducer,\n});\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type RootStoreType = ReturnType<typeof rootReducer>;\n\n// @ts-ignore\n\nwindow.store = store;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}